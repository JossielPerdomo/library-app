{"version":3,"sources":["components/BookForm.js","components/BookList.js","components/Navbar.js","components/LibraryApp.js","helpers/getBooks.js","index.js"],"names":["BookForm","book","setBook","setListUpdated","edit","handleInputChange","target","name","value","title","author","edition","onSubmit","e","preventDefault","parseInt","Swal","fire","icon","text","console","log","fetch","id","method","headers","body","JSON","stringify","then","res","className","htmlFor","type","placeholder","onChange","min","BookList","books","updateBook","style","textAlign","map","onClick","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","Navbar","brand","href","LibraryApp","useState","setBooks","setEdit","listUpdated","useEffect","json","marginBottom","bookSelected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3c1cbfb.chunk.js","sourcesContent":["import React from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const BookForm = ({book, setBook, setListUpdated, edit}) => {\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setBook({\r\n            ...book,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    let {title, author, edition} = book;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        //validations\r\n        edition = parseInt(edition, 10);\r\n\r\n        if(title === '' || author === '' || edition <= 0){\r\n            \r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'All fields are required'\r\n            })\r\n            return;\r\n        }\r\n\r\n        //query\r\n\r\n        if(!edit){\r\n            console.log('add');\r\n            fetch('https://jossiel-library-api.herokuapp.com/books', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(book)\r\n            })\r\n            .then(res => res.text())\r\n            .then((res) => {\r\n                console.log(res);\r\n                if(res === 'The book already exists'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: res\r\n                    });\r\n                }else{\r\n                    Swal.fire('Saved!', '', 'success');\r\n                    setListUpdated(true);\r\n                }\r\n            });\r\n        }else{\r\n            console.log('edit');\r\n            fetch('https://jossiel-library-api.herokuapp.com/books/'+book.id, {\r\n                method: 'PUT',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(book)\r\n            })\r\n            .then(res => res.text())\r\n            .then((res) => {\r\n                console.log(res);\r\n                if(res === 'The book already exists'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: res\r\n                    });\r\n                }else{\r\n                    Swal.fire('Updated!', '', 'success');\r\n                    setListUpdated(true);\r\n                }\r\n            });\r\n\r\n        }\r\n        \r\n        setBook({\r\n            title: '',\r\n            author: '',\r\n            edition: 0\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"title\" className=\"form-label\">\r\n                    Title\r\n                </label>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Title\" \r\n                    name=\"title\"\r\n                    value={book.title}\r\n                    onChange={handleInputChange}\r\n                    className=\"form-control\"\r\n                /> \r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"author\" className=\"form-label\">\r\n                    Author\r\n                </label>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Author\"\r\n                    name=\"author\"\r\n                    value={book.author}\r\n                    onChange={handleInputChange}\r\n                    className=\"form-control\"\r\n                /> \r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"edition\" className=\"form-label\">\r\n                    Edition\r\n                </label>\r\n                <input \r\n                    type=\"number\" \r\n                    min=\"1\"\r\n                    name=\"edition\" \r\n                    value={book.edition}\r\n                    onChange={handleInputChange}\r\n                    className=\"form-control\"\r\n                /> \r\n            </div>\r\n            <div className=\"d-grid gap-2\">\r\n                {\r\n                    edit ? \r\n                    (<button \r\n                        type=\"submit\" className=\"btn btn-primary\"\r\n                    > \r\n                        Edit\r\n                    </button>)\r\n                    : \r\n                    (<button \r\n                        type=\"submit\" className=\"btn btn-primary\"\r\n                    > \r\n                        Add\r\n                    </button>)\r\n                }\r\n                \r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const BookList = ({books, setListUpdated, updateBook}) => {\r\n\r\n    const handleDelete = (id) => {\r\n\r\n        //Alert to make sure you want to delete a book\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n            \r\n                fetch('https://jossiel-library-api.herokuapp.com/books/' + id, {\r\n                    method: 'DELETE'\r\n                }).then(res => res.text())\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    Swal.fire(\r\n                        'Deleted!',\r\n                        'Your book has been deleted.',\r\n                        'success'\r\n                    )\r\n                    setListUpdated(true);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <table className=\"table table-dark table-striped\">\r\n            <thead style={{textAlign:\"center\"}}>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Title</th>\r\n                    <th>Author</th>\r\n                    <th>Edition</th>\r\n                    <th>Delete</th>\r\n                    <th>Edit</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody style={{textAlign:\"center\"}}>\r\n                {\r\n                    books.map(book => (\r\n                        <tr key={book.id}>\r\n                            <td>{book.id}</td>\r\n                            <td>{book.title}</td>\r\n                            <td>{book.author}</td>\r\n                            <td>{book.edition}</td>\r\n                            <td>\r\n                                <button \r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => handleDelete(book.id)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <button \r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={() => updateBook(book)}    \r\n                                >\r\n                                    Edit\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n                \r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Navbar = ({brand}) => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <div className=\"container\">\r\n                    <a href=\"#\" className=\"navbar-brand\">{brand}</a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BookForm } from './BookForm';\r\nimport { BookList } from './BookList'\r\nimport { Navbar } from './Navbar'\r\nimport { getBooks } from '../helpers/getBooks';\r\n\r\n\r\nexport const LibraryApp = () => {\r\n\r\n    const [book, setBook] = useState({\r\n        title: '',\r\n        author: '',\r\n        edition: 0\r\n    });\r\n    const [books, setBooks] = useState([]);\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const [listUpdated, setListUpdated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n        console.log('useEffect');\r\n        getBooks().then(res => setBooks(res));\r\n        setListUpdated(false);\r\n        setEdit(false);\r\n\r\n    }, [listUpdated]);\r\n\r\n    const updateBook = (bookSelected) => {\r\n        setBook(bookSelected);\r\n        setEdit(true);\r\n    }\r\n\r\n    console.log('hola')\r\n\r\n    return (\r\n        <>\r\n            <Navbar brand=\"Library App\"/>\r\n            <div className=\"container\">\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-lg-7\" >\r\n                        <h2 style={{textAlign:\"center\", marginBottom:\"15px\"}}>\r\n                            Book List\r\n                        </h2>\r\n                        <BookList \r\n                            books={books}\r\n                            setListUpdated={setListUpdated}\r\n                            updateBook={updateBook}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg-5\">\r\n                        <h2 style={{textAlign:\"center\"}}>Book Form</h2>\r\n                        <BookForm \r\n                            book={book} \r\n                            setBook={setBook} \r\n                            setListUpdated={setListUpdated}\r\n                            edit={edit}\r\n                        />\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nexport const getBooks = () => {\r\n    \r\n    const books = fetch('https://jossiel-library-api.herokuapp.com/books').then(res => res.json());\r\n\r\n    return books;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { LibraryApp } from './components/LibraryApp';\n\nReactDOM.render(\n    <LibraryApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}