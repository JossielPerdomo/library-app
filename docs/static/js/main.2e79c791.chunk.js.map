{"version":3,"sources":["components/BookForm.js","components/BookList.js","components/Navbar.js","components/LibraryApp.js","helpers/getBooks.js","index.js"],"names":["BookForm","book","setBook","setListUpdated","edit","handleInputChange","target","name","value","title","author","edition","onSubmit","e","preventDefault","parseInt","Swal","fire","icon","text","console","log","fetch","id","method","headers","body","JSON","stringify","then","res","className","htmlFor","type","placeholder","onChange","min","BookList","books","updateBook","style","textAlign","map","width","marginBottom","onClick","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","Navbar","brand","href","LibraryApp","useState","setBooks","setEdit","listUpdated","useEffect","json","bookSelected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e79c791.chunk.js","sourcesContent":["import React from 'react';\nimport Swal from 'sweetalert2';\n\nexport const BookForm = ({book, setBook, setListUpdated, edit}) => {\n\n    const handleInputChange = ({target}) => {\n        setBook({\n            ...book,\n            [target.name]: target.value\n        });\n    }\n\n    let {title, author, edition} = book;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        //validations\n        edition = parseInt(edition, 10);\n\n        if(title === '' || author === '' || edition <= 0){\n            \n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'All fields are required'\n            })\n            return;\n        }\n\n        //query\n\n        if(!edit){\n            console.log('add');\n            fetch('https://jossiel-library-api.herokuapp.com/books', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(book)\n            })\n            .then(res => res.text())\n            .then((res) => {\n                console.log(res);\n                if(res === 'The book already exists'){\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops...',\n                        text: res\n                    });\n                }else{\n                    Swal.fire('Saved!', '', 'success');\n                    setListUpdated(true);\n                }\n            });\n        }else{\n            console.log('edit');\n            fetch('https://jossiel-library-api.herokuapp.com/books/'+book.id, {\n                method: 'PUT',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(book)\n            })\n            .then(res => res.text())\n            .then((res) => {\n                console.log(res);\n                if(res === 'The book already exists'){\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops...',\n                        text: res\n                    });\n                }else{\n                    Swal.fire('Updated!', '', 'success');\n                    setListUpdated(true);\n                }\n            });\n\n        }\n        \n        setBook({\n            title: '',\n            author: '',\n            edition: 0\n        });\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"title\" className=\"form-label\">\n                    Title\n                </label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Title\" \n                    name=\"title\"\n                    value={book.title}\n                    onChange={handleInputChange}\n                    className=\"form-control\"\n                /> \n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"author\" className=\"form-label\">\n                    Author\n                </label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Author\"\n                    name=\"author\"\n                    value={book.author}\n                    onChange={handleInputChange}\n                    className=\"form-control\"\n                /> \n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"edition\" className=\"form-label\">\n                    Edition\n                </label>\n                <input \n                    type=\"number\" \n                    min=\"1\"\n                    name=\"edition\" \n                    value={book.edition}\n                    onChange={handleInputChange}\n                    className=\"form-control\"\n                /> \n            </div>\n            <div className=\"d-grid gap-2\">\n                {\n                    edit ? \n                    (<button \n                        type=\"submit\" className=\"btn btn-primary\"\n                    > \n                        Edit\n                    </button>)\n                    : \n                    (<button \n                        type=\"submit\" className=\"btn btn-primary\"\n                    > \n                        Add\n                    </button>)\n                }\n                \n            </div>\n\n        </form>\n    )\n}\n","import React from 'react';\nimport Swal from 'sweetalert2';\n\nexport const BookList = ({books, setListUpdated, updateBook}) => {\n\n    const handleDelete = (id) => {\n\n        //Alert to make sure you want to delete a book\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.isConfirmed) {\n            \n                fetch('https://jossiel-library-api.herokuapp.com/books/' + id, {\n                    method: 'DELETE'\n                }).then(res => res.text())\n                .then((res) => {\n                    console.log(res);\n                    Swal.fire(\n                        'Deleted!',\n                        'Your book has been deleted.',\n                        'success'\n                    )\n                    setListUpdated(true);\n                });\n            }\n        })\n    }\n\n    return (\n        <table className=\"table table-dark table-striped\">\n            <thead style={{textAlign:\"center\"}}>\n                <tr>\n                    <th>ID</th>\n                    <th>Title</th>\n                    <th>Author</th>\n                    <th>Edition</th>\n                    <th>Opt</th>\n                </tr>\n            </thead>\n            <tbody style={{textAlign:\"center\"}}>\n                {\n                    books.map(book => (\n                        <tr key={book.id}>\n                            <td>{book.id}</td>\n                            <td>{book.title}</td>\n                            <td>{book.author}</td>\n                            <td>{book.edition}</td>\n                            <td>\n                                <button \n                                    style={{width:\"70px\", marginBottom:\"5px\"}}\n                                    className=\"btn btn-danger\"\n                                    onClick={() => handleDelete(book.id)}\n                                >\n                                    Delete\n                                </button>\n                                <button \n                                    style={{width:\"70px\"}}\n                                    className=\"btn btn-primary\"\n                                    onClick={() => updateBook(book)}    \n                                >\n                                    Edit\n                                </button>\n                            </td>\n                        </tr>\n                    ))\n                }\n                \n            </tbody>\n        </table>\n    )\n}\n","import React from 'react'\n\nexport const Navbar = ({brand}) => {\n    return (\n        <div>\n            <nav className=\"navbar navbar-dark bg-dark\">\n                <div className=\"container\">\n                    <a href=\"#\" className=\"navbar-brand\">{brand}</a>\n                </div>\n            </nav>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { BookForm } from './BookForm';\nimport { BookList } from './BookList'\nimport { Navbar } from './Navbar'\nimport { getBooks } from '../helpers/getBooks';\n\n\nexport const LibraryApp = () => {\n\n    const [book, setBook] = useState({\n        title: '',\n        author: '',\n        edition: 0\n    });\n    const [books, setBooks] = useState([]);\n    const [edit, setEdit] = useState(false);\n\n    const [listUpdated, setListUpdated] = useState(false);\n\n    useEffect(() => {\n        \n        console.log('useEffect');\n        getBooks().then(res => setBooks(res));\n        setListUpdated(false);\n        setEdit(false);\n\n    }, [listUpdated]);\n\n    const updateBook = (bookSelected) => {\n        setBook(bookSelected);\n        setEdit(true);\n    }\n\n    console.log('hola')\n\n    return (\n        <>\n            <Navbar brand=\"Library App\"/>\n            <div className=\"container\">\n                <div className=\"row mt-5\">\n                    <div className=\"col-lg-7\" >\n                        <h2 style={{textAlign:\"center\", marginBottom:\"15px\"}}>\n                            Book List\n                        </h2>\n                        <BookList \n                            books={books}\n                            setListUpdated={setListUpdated}\n                            updateBook={updateBook}\n                        />\n                    </div>\n                    <div className=\"col-lg-5\">\n                        <h2 style={{textAlign:\"center\"}}>Book Form</h2>\n                        <BookForm \n                            book={book} \n                            setBook={setBook} \n                            setListUpdated={setListUpdated}\n                            edit={edit}\n                        />\n                    </div>\n                </div>  \n            </div>\n        </>\n    )\n}\n","\nexport const getBooks = () => {\n    \n    const books = fetch('https://jossiel-library-api.herokuapp.com/books').then(res => res.json());\n\n    return books;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { LibraryApp } from './components/LibraryApp';\n\nReactDOM.render(\n    <LibraryApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}